# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - run:
          name: Build
          command: ./mvnw -B -DskipTests clean install
      - run:
          name: Test
          command: ./mvnw test
      - store_test_results:
          path: booking/booking-domain/target/surefire-reports
      - store_test_results:
          path: booking/booking-application/target/surefire-reports
      - persist_to_workspace:
          root: .
          paths:
            - .

  build-native-exec:
    machine: true
    resource_class: medium
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx6400m
      GRAALVM_HOME: /home/circleci/repo/.graalvm
      JAVA_HOME: /home/circleci/repo/.graalvm
    steps:
      - checkout
      # Install GraalVM and native-image, needed for a native Quarkus build
      # ########################
      - run:
          name: Install GraalVM
          command: curl https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.0.0/graalvm-ce-java11-linux-amd64-21.0.0.tar.gz -O -J -L && tar xfz graalvm-ce-java11-linux-amd64-21.0.0.tar.gz && mv graalvm-ce-java11-21.0.0 .graalvm && rm graalvm-ce-java11-linux-amd64-21.0.0.tar.gz
      - run:
          name: Install native-image
          command: $GRAALVM_HOME/bin/gu install native-image
      - run:
          name: Java Version Check
          command: java -version
      - run:
          name: Build (Native)
          command: ./mvnw clean package -Pnative -DskipTests -pl :quarkus-awslambda -am
          no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - configuration/quarkus-awslambda/target/function.zip

  deploy-aws-lambda:
    docker:
      - image: circleci/node:lts
    parallelism: 1
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Serverless plugins
          command: |
            cd ./configuration/awslambda
            npm install
      - run:
          name: Deploying to AWS using Serverless CLI
          command: |
            cd ./configuration/awslambda
            npx serverless deploy --region eu-central-1

  deploy-quarkus-aws-lambda:
    docker:
      - image: circleci/node:lts
    parallelism: 1
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Deploying to AWS using Serverless CLI
          command: |
            cd ./configuration/quarkus-awslambda
            npx serverless deploy --region eu-central-1

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  ci:
    jobs:
      - build-and-test
      - deploy-aws-lambda:
          requires:
            - build-and-test
      - build-native-exec:
          requires:
            - build-and-test
      - deploy-quarkus-aws-lambda:
          requires:
            - build-native-exec
