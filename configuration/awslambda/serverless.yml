service: booking
frameworkVersion: '2'

plugins:
  - serverless-dynamodb-local

custom:
  tableAndBookingDynamoDbTableName: 'table-and-booking-${self:provider.stage}'
  dynamodb:
    start:
      seed: true
      inMemory: true
    stages:
      - ${self:provider.stage}
    seed:
      books:
        sources:
          - table: ${self:custom.tableAndBookingDynamoDbTableName}
            sources: [ ./test-data/tables-and-bookings.json ]

provider:
  name: aws
  runtime: java11
  stage: dev
  lambdaHashingVersion: 20201221

  environment:
    AWS_TABLE_AND_BOOKING_TABLE: ${self:custom.tableAndBookingDynamoDbTableName}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - { "Fn::GetAtt": [ "tableAndBookingTable", "Arn" ] }
            - Fn::Join:
                - '/'
                - - { "Fn::GetAtt": [ "tableAndBookingTable", "Arn" ] }
                  - 'index/*'

package:
  artifact: target/awslambda-1.0.0-SNAPSHOT.jar

functions:
  showTables:
    handler: io.github.hexarchtraining.hts.awslambda.ShowTablesRequestHandler
    events:
      - httpApi:
          path: /booking/tables
          method: get
  check:
    handler: io.github.hexarchtraining.hts.awslambda.HealthCheckRequestHandler
    events:
      - httpApi:
          path: /check/{token}
          method: get

resources:
  Resources:
    tableAndBookingTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableAndBookingDynamoDbTableName}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
